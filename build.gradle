import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    // Use ShadowJAR to build the JARs
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    // Use Blossom to replace tokens
    id 'net.kyori.blossom' version '1.3.0'
}

ext {
    output = '_run/plugins'
}


subprojects {
    // Apply these plugins for each submodule
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'java-library'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'net.kyori.blossom'

    ext {
        pluginName = 'BloomAB'
        pluginVersion = '1.3'
        pluginDescription = 'description here'
        pluginAuthor = 'Bloom'
        pluginWebsite = 'https://bloom.host'
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    processResources {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }

    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.geri.dev/releases' }
    }

    // Use repackaged SnakeYAML for configs
    dependencies { implementation 'dev.geri:Konfig:1.6' }
}

// Task to gather all shadowJars after building
task buildAndCopy {
    dependsOn subprojects.collect { it.tasks.withType(ShadowJar) }
    doLast {
        subprojects.each { subproject ->
            if (subproject.name == 'common') return
            subproject.tasks.withType(ShadowJar).each { shadowJarTask ->
                copy {
                    from shadowJarTask.archiveFile
                    into project.output
                    rename { String fileName ->
                        fileName.replace('-all', '')
                    }
                }
            }
        }
    }
}
